package MyEncodingLogic;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import javax.swing.ImageIcon;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;

import WindowSplitPane;

/**
 * Menu class to add menu bar and menu items to the frame.
 * @author user
 *
 */


public class WindowMenu {

	WindowSplitPane pane;
	WindowMenu(WindowSplitPane pane){
		this.pane = pane;
		
	}
	
	/**
	 * Sets up the Menu
	 * @return the created {@link JMenuBar}
	 */
	JMenuBar setupMenu() {
		/**
		 * Create the menubar itself
		 */
		JMenuBar menuBar = new JMenuBar();
		/**
		 * Create a file and help menu
		 */
		JMenu fileMenu = new JMenu("File");
		JMenu helpMenu = new JMenu("Help");
		/**
		 * Add menus to the menubar
		 */
		menuBar.add(fileMenu);
		menuBar.add(helpMenu);
		
		/**
		 * Create image object
		 * 
		 */
		
		ImageIcon loadImg = new ImageIcon("src/load.png");
		ImageIcon saveImg = new ImageIcon("src/save.png");
		ImageIcon exitImg = new ImageIcon("src/exit.png");
		
		/**
		 * Create menu items on menu bar
		 */
		JMenuItem load = new JMenuItem("Load", KeyEvent.VK_L);
		JMenuItem save = new JMenuItem("Save", KeyEvent.VK_S);
		JMenuItem exit = new JMenuItem("Exit", KeyEvent.VK_E);
		JMenuItem about = new JMenuItem("About", KeyEvent.VK_A);
		
		/**
		 * Setup menu item icon image on menu
		 */
		load.setIcon(loadImg);
		save.setIcon(saveImg);
		exit.setIcon(exitImg);
	
		/**
		 * Create short cut for each menu item
		 */
		load.setAccelerator(KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L,java.awt.Event.CTRL_MASK));
		save.setAccelerator(KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.Event.CTRL_MASK));
		exit.setAccelerator(KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.Event.CTRL_MASK));
		about.setAccelerator(KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.Event.CTRL_MASK));
		/**
		 * Add the options to the menu
		 */
		fileMenu.add(load);
		fileMenu.add(save);
		fileMenu.addSeparator();
		fileMenu.add(exit);
		helpMenu.add(about);
		
		/**
		 * Add the action listeners that identify the code to execute when the options are selected.
		 */
		load.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				pane.readFile();
			}
		});

		save.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				pane.saveFile();
			}
		});

		exit.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				System.exit(0);
			}
		});

		about.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				JOptionPane.showMessageDialog(null, "About this program");
			}
		});
		
		return menuBar;

	}


}
